{"version":3,"sources":["../../src/services/user.service.js"],"names":["validateSchema","body","schema","Joi","object","keys","email","string","required","password","validate","error","value","details"],"mappings":";;;;;;AAAA;;;;;;kBAEe;AACbA,gBADa,0BACEC,IADF,EACQ;AACnB,QAAMC,SAASC,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAC/BC,aAAOH,cAAII,MAAJ,GACJD,KADI,GAEJE,QAFI,EADwB;AAI/BC,gBAAUN,cAAII,MAAJ,GAAaC,QAAb;AAJqB,KAAlB,CAAf;;AADmB,wBAOML,cAAIO,QAAJ,CAAaT,IAAb,EAAmBC,MAAnB,CAPN;AAAA,QAOXS,KAPW,iBAOXA,KAPW;AAAA,QAOJC,KAPI,iBAOJA,KAPI;;AAQnB,QAAID,SAASA,MAAME,OAAnB,EAA4B;AAC1B,aAAO,EAAEF,YAAF,EAAP;AACD;AACD,WAAO,EAAEC,YAAF,EAAP;AACD;AAbY,C","file":"user.service.js","sourcesContent":["import Joi from 'joi';\r\n\r\nexport default {\r\n  validateSchema(body) {\r\n    const schema = Joi.object().keys({\r\n      email: Joi.string()\r\n        .email()\r\n        .required(),\r\n      password: Joi.string().required(),\r\n    });\r\n    const { error, value } = Joi.validate(body, schema);\r\n    if (error && error.details) {\r\n      return { error };\r\n    }\r\n    return { value };\r\n  },\r\n};"]}